//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.BLL
{
    
    
    public partial class BusinessUnitBLL : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<WorkflowSampleSystem.Domain.BusinessUnit, Framework.DomainDriven.BLL.BLLBaseOperation>, WorkflowSampleSystem.BLL.IBusinessUnitBLL
    {
        
        public BusinessUnitBLL(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnit> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.BLL.IBusinessUnitBLL, WorkflowSampleSystem.BLL.BusinessUnitBLL, WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory
    {
        
        public BusinessUnitBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeBLL : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<WorkflowSampleSystem.Domain.Employee, Framework.DomainDriven.BLL.BLLBaseOperation>, WorkflowSampleSystem.BLL.IEmployeeBLL
    {
        
        public EmployeeBLL(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Employee> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.BLL.IEmployeeBLL, WorkflowSampleSystem.BLL.EmployeeBLL, WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.BLL.IEmployeeBLLFactory
    {
        
        public EmployeeBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class HRDepartmentBLL : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<WorkflowSampleSystem.Domain.HRDepartment, Framework.DomainDriven.BLL.BLLBaseOperation>, WorkflowSampleSystem.BLL.IHRDepartmentBLL
    {
        
        public HRDepartmentBLL(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.HRDepartment> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class HRDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.BLL.IHRDepartmentBLL, WorkflowSampleSystem.BLL.HRDepartmentBLL, WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory
    {
        
        public HRDepartmentBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class LocationBLL : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<WorkflowSampleSystem.Domain.Location, Framework.DomainDriven.BLL.BLLBaseOperation>, WorkflowSampleSystem.BLL.ILocationBLL
    {
        
        public LocationBLL(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Location> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class LocationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.BLL.ILocationBLL, WorkflowSampleSystem.BLL.LocationBLL, WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.BLL.ILocationBLLFactory
    {
        
        public LocationBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class NamedLockBLL : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<WorkflowSampleSystem.Domain.NamedLock, Framework.DomainDriven.BLL.BLLBaseOperation>, WorkflowSampleSystem.BLL.INamedLockBLL
    {
        
        public NamedLockBLL(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.NamedLock> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class NamedLockBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.BLL.INamedLockBLL, WorkflowSampleSystem.BLL.NamedLockBLL, WorkflowSampleSystem.Domain.NamedLock>, WorkflowSampleSystem.BLL.INamedLockBLLFactory
    {
        
        public NamedLockBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class WorkflowSampleSystemBLLFactoryContainer : Framework.DomainDriven.BLL.BLLContextContainer<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext>, WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer
    {
        
        private WorkflowSampleSystem.BLL.IBusinessUnitBLL businessUnitBLL;
        
        private WorkflowSampleSystem.BLL.WorkflowSampleSystemDefaultBLLFactory defaultBLLFactory;
        
        private WorkflowSampleSystem.BLL.IEmployeeBLL employeeBLL;
        
        private WorkflowSampleSystem.BLL.IHRDepartmentBLL hRDepartmentBLL;
        
        private WorkflowSampleSystem.BLL.WorkflowSampleSystemImplementedBLLFactory implementedBLLFactory;
        
        private WorkflowSampleSystem.BLL.ILocationBLL locationBLL;
        
        private WorkflowSampleSystem.BLL.INamedLockBLL namedLockBLL;
        
        public WorkflowSampleSystemBLLFactoryContainer(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public WorkflowSampleSystem.BLL.IBusinessUnitBLL BusinessUnit
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitBLL, null))
                {
                    this.businessUnitBLL = this.BusinessUnitFactory.Create();
                }
                return this.businessUnitBLL;
            }
        }
        
        public WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory BusinessUnitFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> Default
        {
            get
            {
                if (object.ReferenceEquals(this.defaultBLLFactory, null))
                {
                    this.defaultBLLFactory = new WorkflowSampleSystem.BLL.WorkflowSampleSystemDefaultBLLFactory(this.Context);
                }
                return this.defaultBLLFactory;
            }
        }
        
        public WorkflowSampleSystem.BLL.IEmployeeBLL Employee
        {
            get
            {
                if (object.ReferenceEquals(this.employeeBLL, null))
                {
                    this.employeeBLL = this.EmployeeFactory.Create();
                }
                return this.employeeBLL;
            }
        }
        
        public WorkflowSampleSystem.BLL.IEmployeeBLLFactory EmployeeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<WorkflowSampleSystem.BLL.IEmployeeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public WorkflowSampleSystem.BLL.IHRDepartmentBLL HRDepartment
        {
            get
            {
                if (object.ReferenceEquals(this.hRDepartmentBLL, null))
                {
                    this.hRDepartmentBLL = this.HRDepartmentFactory.Create();
                }
                return this.hRDepartmentBLL;
            }
        }
        
        public WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory HRDepartmentFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> Implemented
        {
            get
            {
                if (object.ReferenceEquals(this.implementedBLLFactory, null))
                {
                    this.implementedBLLFactory = new WorkflowSampleSystem.BLL.WorkflowSampleSystemImplementedBLLFactory(this.Context);
                }
                return this.implementedBLLFactory;
            }
        }
        
        public WorkflowSampleSystem.BLL.ILocationBLL Location
        {
            get
            {
                if (object.ReferenceEquals(this.locationBLL, null))
                {
                    this.locationBLL = this.LocationFactory.Create();
                }
                return this.locationBLL;
            }
        }
        
        public WorkflowSampleSystem.BLL.ILocationBLLFactory LocationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<WorkflowSampleSystem.BLL.ILocationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public WorkflowSampleSystem.BLL.INamedLockBLL NamedLock
        {
            get
            {
                if (object.ReferenceEquals(this.namedLockBLL, null))
                {
                    this.namedLockBLL = this.NamedLockFactory.Create();
                }
                return this.namedLockBLL;
            }
        }
        
        public WorkflowSampleSystem.BLL.INamedLockBLLFactory NamedLockFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<WorkflowSampleSystem.BLL.INamedLockBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public static void RegisterBLLFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory, WorkflowSampleSystem.BLL.BusinessUnitBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid>, WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<WorkflowSampleSystem.BLL.IEmployeeBLLFactory, WorkflowSampleSystem.BLL.EmployeeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid>, WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.BLL.IEmployeeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory, WorkflowSampleSystem.BLL.HRDepartmentBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.HRDepartment, System.Guid>, WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<WorkflowSampleSystem.BLL.ILocationBLLFactory, WorkflowSampleSystem.BLL.LocationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Location, System.Guid>, WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.BLL.ILocationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<WorkflowSampleSystem.BLL.INamedLockBLLFactory, WorkflowSampleSystem.BLL.NamedLockBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.NamedLock, System.Guid>, WorkflowSampleSystem.Domain.NamedLock>, WorkflowSampleSystem.BLL.INamedLockBLLFactory>(serviceCollection);
        }
    }
    
    public partial class WorkflowSampleSystemDefaultBLLFactory : Framework.DomainDriven.BLL.Security.DefaultSecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public WorkflowSampleSystemDefaultBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> Create<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new WorkflowSampleSystem.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
    
    public partial class WorkflowSampleSystemImplementedBLLFactory : Framework.DomainDriven.BLL.Security.ImplementedSecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public WorkflowSampleSystemImplementedBLLFactory(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        protected override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> CreateDefault<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new WorkflowSampleSystem.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
}
